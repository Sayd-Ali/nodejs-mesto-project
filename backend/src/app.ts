import { PORT, MONGO_URL } from './config';
import { errors as celebrateErrors } from 'celebrate';
import express from 'express';
import mongoose from 'mongoose';
import router from './routes';
import { requestLogger, errorLogger } from './middlewares/logger';
import errorHandler from './errors/default';
import cors from 'cors';
import cookieParser from 'cookie-parser';

const app = express();

// –¥–æ–≤–µ—Ä—è—Ç—å proxy (—á—Ç–æ–±—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–ª–∏ secure cookies –∑–∞ nginx)
app.set('trust proxy', 1);

// --- CORS (—Ä–∞–∑—Ä–µ—à–∞–µ–º —Ñ—Ä–æ–Ω—Ç—É —Ö–æ–¥–∏—Ç—å –Ω–∞ API —Å –∫—É–∫–∞–º–∏) ---
const corsOpts = {
  origin: 'https://mymesto.student.nomorepartiessbs.ru',
  credentials: true,
};
app.use(cors(corsOpts));
app.options('*', cors(corsOpts)); // preflight —á–µ—Ä–µ–∑ cors

// ‚ö†Ô∏è –®–æ—Ä—Ç–∫–∞—Ç: —Å—ä–µ–¥–∞–µ–º OPTIONS –¥–æ —Ä–æ—É—Ç–æ–≤, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ø–∞–ª–æ –≤ auth
const preflight = (req: any, res: any, next: any) => {
  if (req.method === 'OPTIONS') return res.sendStatus(204);
  next();
};
app.use(preflight);

// JSON + cookies
app.use(express.json());
app.use(cookieParser());

// –õ–æ–≥–≥–µ—Ä –∑–∞–ø—Ä–æ—Å–æ–≤
app.use(requestLogger);

// –†–æ—É—Ç—ã (–≤–Ω—É—Ç—Ä–∏ router –ø—É–±–ª–∏—á–Ω—ã–µ /signin –∏ /signup –¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ –î–û router.use(auth))
app.use(router);

// –õ–æ–≥–≥–µ—Ä –æ—à–∏–±–æ–∫
app.use(errorLogger);

// –û—à–∏–±–∫–∏ celebrate
app.use(celebrateErrors());

// –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.use(errorHandler);

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Mongo –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
mongoose.connect(MONGO_URL)
  .then(() => {
    console.log('‚úÖ MongoDB connected');
    app.listen(PORT, () => {
      console.log(`üöÄ Server running on port ${PORT}`);
    });
  })
  .catch(err => {
    console.error('‚ùå MongoDB connection error:', err);
    process.exit(1);
  });
